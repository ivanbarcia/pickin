@page
@model Pickin.Pages.Productos.CreateModel

@{
    ViewData["Title"] = "Pickin | Create";
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h1>Agregar Producto</h1>
                </div>
                <div class="ibox-content">
                    <form method="post" enctype="multipart/form-data">
                        <div class="form-horizontal">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <label asp-for="Producto.Nombre" class="control-label col-md-2"></label>
                                <div class="col-md-8">
                                    <input asp-for="Producto.Nombre" class="form-control" />
                                    <span asp-validation-for="Producto.Nombre" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label asp-for="Producto.Descripcion" class="control-label col-md-2"></label>
                                <div class="col-md-8">
                                    <input asp-for="Producto.Descripcion" class="form-control" />
                                    <span asp-validation-for="Producto.Descripcion" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label asp-for="Producto.Precio" class="control-label col-md-2"></label>
                                <div class="input-group col-md-8">
                                    <span class="input-group-addon"><strong>$</strong></span>
                                    <input asp-for="Producto.Precio" class="form-control" />
                                    <span asp-validation-for="Producto.Precio" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label asp-for="Producto.Stock" class="control-label col-md-2"></label>
                                <div class="col-md-8">
                                    <input asp-for="Producto.Stock" class="form-control" />
                                    <span asp-validation-for="Producto.Stock" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label asp-for="Producto.Image" class="control-label col-md-2"></label>
                                <div class="col-md-8">
                                    <input asp-for="postedFile" type="file" class="form-control" />
                                    <span asp-validation-for="Producto.Image" class="text-danger"></span>
                                </div>
                            </div>
                            <hr />
                            <div class="form-group">
                                <div class="col-md-offset-1">
                                    <input type="submit" value="Aceptar" class="btn btn-primary" />
                                    <a asp-page="Index" class="btn btn-white">Cancelar</a>
                                </div>
                            </div>
                        </div>
                    </form>

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript" src="~/lib/plugins/metisMenu/metisMenu.min.js"></script>
    <script type="text/javascript" src="~/lib/plugins/slimscroll/jquery.slimscroll.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {

            $.validator.methods.range = function (value, element, param) {
                var globalizedValue = value.replace(",", ".");
                return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
            }

            $.validator.methods.number = function (value, element) {
                return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
            }

        });
    </script>

}